#environment-variables
env = CLUTTER_BACKEND,wayland
env = GDK_BACKEND,wayland,x11
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = QT_QPA_PLATFORM,wayland;xcb
env = QT_QPA_PLATFORMTHEME,qt5ct
env = QT_SCALE_FACTOR,1
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland

env = GDK_SCALE,2
env = XCURSOR_SIZE,32
# vulkan
env = WLR_RENDERER,vulkan

# firefox
env = MOZ_ENABLE_WAYLAND,1

# NVIDIA
# This is from Hyprland Wiki. As a start, WLR_NO_HARDWARE_CURSORS 1 will be activated if nvidia gpu detected
env = WLR_NO_HARDWARE_CURSORS,1
env = LIBVA_DRIVER_NAME,nvidia
env = __GLX_VENDOR_LIBRARY_NAME,nvidia

monitor = , 2560x1600@165, 0x0, 1.666667


$scriptsDir = $HOME/.config/hypr/scripts
$UserScripts = $HOME/.config/hypr/UserScripts

$wallDIR=$HOME/.config/hypr/wallpapers
$lock = $scriptsDir/LockScreen.sh
$SwwwRandom = $UserScripts/WallpaperAutoChange.sh

# wallpaper stuff / More wallpaper options below
exec-once = swww query || swww init
exec-once = $SwwwRandom $wallDIR # random wallpaper switcher every 30 minutes


# Polkit (Polkit Gnome / KDE)
exec-once = $scriptsDir/Polkit.sh

exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

exec-once=$HOME/.config/hypr/autostart
exec-once = hypridle
exec-once = nm-applet --indicator &
exec-once = blueman-applet &
exec-once = fcitx5 -d
exec-once = ~/App/nekoray/nekoray -d

exec-once=wl-paste --type text --watch cliphist store
exec-once=wl-paste --type image --watch cliphist store

#clipboard manager
exec-once = wl-paste --type text --watch cliphist store
exec-once = wl-paste --type image --watch cliphist store

# Rainbow borders
exec-once = $UserScripts/RainbowBorders.sh

# sway-idle with lock only
exec-once = swayidle -w timeout 900 '$lock'


input {
    kb_layout=
    kb_variant=ffffff
    kb_model=
    kb_options= caps:escape
    kb_rules=
    numlock_by_default=1
    follow_mouse=1

    touchpad {
        natural_scroll=no
    }
}

misc{
    disable_hyprland_logo = true
    disable_splash_rendering = true
    mouse_move_enables_dpms = true
}

general {
    sensitivity=1.0 # for mouse cursor
    gaps_in=8
    gaps_out=15
    border_size=3
    resize_on_border = true
    col.active_border=rgba(cba6f7ff) rgba(89b4faff) rgba(94e2d5ff) 10deg
    col.inactive_border=0xff45475a
    apply_sens_to_raw=0 # whether to apply the sensitivity to raw input (e.g. used by games where you aim using your mouse)
    # col.group_border=rgba(137, 157, 235, 255)
    # col.group_border_active=rgba(249, 226, 175, 255)

}


decoration {
    drop_shadow = true
    shadow_range=100
    shadow_render_power=5
    col.shadow= 0x33000000
    col.shadow_inactive=0x22000000
    rounding=15
}



animations {
    enabled=1
    # bezier=overshot,0.05,0.9,0.1,1.1
    bezier=overshot,0.13,0.99,0.29,1.1
    animation=windows,1,4,overshot,slide
    animation=border,1,10,default
    animation=fade,1,10,default
    animation=workspaces,1,6,overshot,slidevert
}

dwindle {
    pseudotile=1 # enable pseudotiling on dwindle
    force_split=0
}

master{
    
}

gestures {
    workspace_swipe=yes
    workspace_swipe_fingers=4
}

xwayland {
    force_zero_scaling = true
}


# example window rules
# for windows named/classed as abc and xyz
#windowrule=move 69 420,abc
windowrule=move center,title:^(fly_is_kitty)$
windowrule=size 600 350,title:^(fly_is_kitty)$
windowrule=animation slide,title:^(all_is_kitty)$
windowrule=float,title:^(all_is_kitty)$
#windowrule=tile,xy
windowrule=tile,title:^(kitty)$
windowrule=float,title:^(fly_is_kitty)$
windowrule=float,title:^(clock_is_kitty)$
windowrule=size 500 234,title:^(clock_is_kitty)$
#windowrule=pseudo,abc
#windowrule=monitor 0,xyz
windowrule = float, org.kde.polkit-kde-authentication-agent-1
windowrule = float, nm-connection-editor|blueman-manager
windowrule = float, pavucontrol
windowrule = float, nwg-look|qt5ct|mpv
windowrule = float, onedriver|onedriver-launcher
windowrule = float, eog
windowrule = float, zoom
windowrule = float, rofi
windowrule = float, gnome-system-monitor
windowrule = float, yad




bind = SUPER, W, exec, $UserScripts/WallpaperRandom.sh # Random wallpapers
bind = CTRL ALT, W, exec, $UserScripts/WallpaperSelect.sh # Select wallpaper to apply


# example binds
bindm=SUPER,mouse:272,movewindow
bindm=SUPER,mouse:273,resizewindow


# Special Keys / Hot Keys
bind = , xf86audioraisevolume, exec, $scriptsDir/Volume.sh --inc #volume up
bind = , xf86audiolowervolume, exec, $scriptsDir/Volume.sh --dec #volume down
bind = , xf86AudioMicMute, exec, $scriptsDir/Volume.sh --toggle-mic #mute mic
bind = , xf86audiomute, exec, $scriptsDir/Volume.sh --toggle
bind = , xf86Sleep, exec, systemctl suspend  # sleep button
bind = , xf86Rfkill, exec, $scriptsDir/AirplaneMode.sh #Airplane mode

# media controls using keyboards
bind = , xf86AudioPlayPause, exec, $scriptsDir/MediaCtrl.sh --pause
bind = , xf86AudioPause, exec, $scriptsDir/MediaCtrl.sh --pause
bind = , xf86AudioPlay, exec, $scriptsDir/MediaCtrl.sh --pause
bind = , xf86AudioNext, exec, $scriptsDir/MediaCtrl.sh --nxt
bind = , xf86AudioPrev, exec, $scriptsDir/MediaCtrl.sh --prv
bind = , xf86audiostop, exec, $scriptsDir/MediaCtrl.sh --stop

bind=SUPER, F, fullscreen
bind=SUPER,RETURN,exec,kitty --title fly_is_kitty
bind=ALT,RETURN,exec,kitty --single-instance

# bind=SUPER,RETURN,exec,alacritty
bind=SUPER,Q,killactive,
#bind=SUPER,M,exit,
bind=SUPER,E,exec,thunar
bind=SUPER,S,togglefloating,
bind=SUPER,D, exec, pkill rofi || rofi -show drun -modi
# Super + P：选择区域截屏，类似于flameshot。
bind=SUPER, P, exec, grim -g "$(slurp)" - | swappy -f -

bind=SUPER,L,exec,~/.config/hypr/scripts/lock

bind=SUPER,left,movefocus,l
bind=SUPER,right,movefocus,r
bind=SUPER,up,movefocus,u
bind=SUPER,down,movefocus,d

# bind=CTRL,1,workspace,1
# bind=CTRL,2,workspace,2
# bind=CTRL,3,workspace,3
# bind=CTRL,4,workspace,4
# bind=CTRL,5,workspace,5
# bind=CTRL,6,workspace,6
bind=SUPER,1,workspace,1
bind=SUPER,2,workspace,2
bind=SUPER,3,workspace,3
bind=SUPER,4,workspace,4
bind=SUPER,5,workspace,5
bind=SUPER,6,workspace,6
bind=SUPER,7,workspace,7
bind=SUPER,8,workspace,8
bind=SUPER,9,workspace,9
bind=SUPER,0,workspace,10

bind=ALT,1,movetoworkspace,1
bind=ALT,2,movetoworkspace,2
bind=ALT,3,movetoworkspace,3
bind=ALT,4,movetoworkspace,4
bind=ALT,5,movetoworkspace,5
bind=ALT,6,movetoworkspace,6
bind=ALT,7,movetoworkspace,7
bind=ALT,8,movetoworkspace,8
bind=ALT,9,movetoworkspace,9
bind=ALT,0,movetoworkspace,10

# bind=SUPER,mouse_down,workspace,e+1
# bind=SUPER,mouse_up,workspace,e-1

bind=SUPER,g,togglegroup
bind=SUPER,tab,changegroupactive

# rec
bind=CTRL,1,exec,kitty --title fly_is_kitty --hold cava
# bind=CTRL,2,exec,code-insiders
# bind=CTRL,3,exec,kitty --single-instance --hold donut.c
bind=CTRL,2,exec,kitty --title clock_is_kitty --hold tty-clock -C5
#wl-clipboard
bind=CTRL, 3, exec, cliphist list | rofi -dmenu | cliphist decode | wl-copy
